=========================
Prevalence in General
=========================

Prevalence is the simplest, fastest and most transparent architecture for business object persistence, load-balancing and fault-tolerance.


Features
============
These are the features provided by a Prevalence Layer.
 - Transparent Persistence - business objects, Plain Old Java Objects
 - ACID Transactions
  - Atomicity
  - Consistency - Transactions have to be consistent (Prevayler has Transaction Filtering).
  - Isolation
  - Durability - Persistence
 - Transparent Replication. Enables Load-Balancing.
 - Transparent Fault-Tolerance.


Performance Scalability
===========================
 - Query Performance Scalability - Prevalence Layers allow simple object queries to run 3 to 4 orders of magnitude faster than using a database through JDBC, even with the database locally cached in RAM. Complex queries will run even faster.
 - Transaction Performance Scalability - Transaction processing performance using a Prevalence Layer is essentially the same as using a database.


Architecture
================
How it works. The logging. The snapshots. Replication. Enables Fault-Tolerance and Load-Balancing.

Can be used in non-OO systems.
