# ----- unit test setup ------
unit.test.includes=**/*Test*.java
# TODO: these tests does not run on Linux!!!
# Most of the following are abstract test superclasses that don't contain any tests:
unit.test.excludes=**/AllTestSuite.java \
                  ,**/MainTest.java \
                  ,**/foundation/FileIOTest.java \
                  ,**/serialization/SerializationTest.java \
                  ,**/implementation/JournalFileRollingTest \
                  ,**/implementation/PersistenceTest


# uncomment below to run any tests in the contrib packages.
# Make sure to compile the contrib sources first,
# because the tests depend only on building the core tests.
#unit.test.includes.contrib=**/*Test*.class
#unit.test.excludes.contrib=**/*Test*$*.class, **/TestErrorRecoveryWithMementos.class

# JVM arguments for running the scalability demo. Running the demo with one
# hundred thousand objects (the default) requires about 128MB.
#scalability.jvmarg=-Xms64m -Xmx64m
scalability.jvmarg=-Xms128m -Xmx128m
#scalability.jvmarg=-Xms256m -Xmx256m

# ----- contrib setup ------
contrib.path=contrib
src.contrib.projects=${contrib.path}/rollbackWithMementoPattern \
                    :${contrib.path}/jxpath \
                    :${contrib.path}/cluster/src/main \
                    :${contrib.path}/cluster/src/test \
                    :${contrib.path}/socketServer/client \
                    :${contrib.path}/socketServer/common \
                    :${contrib.path}/socketServer/example \
                    :${contrib.path}/socketServer/server \
                    :${contrib.path}/transactionsFacade/src \
                    :${contrib.path}/transactionsFacade/tests

# ----- Proxy setup -----
# If you uncomment proxy.use=on, then you *have* to uncomment
# the other two proxy properties otherwise the build will fail.
# see: http://ant.apache.org/manual/OptionalTasks/setproxy.html
proxy.host=proxy.domain
proxy.hosts.non=fozbot.corp.sun.com|*.eng.sun.com
proxy.port=8080
#proxy.use=on

# ----- Default Base Path for Dependent Packages -----
dependencies.path=dependencies
sourceforge.url=http://easynews.dl.sourceforge.net

# ----- Skaringa -----
skaringa.version=r3p7
skaringa.home=${dependencies.path}/skaringa
skaringa.license=${skaringa.home}/doc/license.txt
#skaringa.jar=${skaringa.home}/lib/skaringa-${skaringa.version}.jar
skaringa.jar=root/lib/skaringa-${skaringa.version}.jar
skaringa.loc=${sourceforge.url}/sourceforge/skaringa/skaringa-${skaringa.version}.tar.gz

# ----- XStream -----
xstream.version=1.1.3
xstream.home=${dependencies.path}/xstream-${xstream.version}
#xstream.jar=${xstream.home}/xstream-${xstream.version}.jar
xstream.jar=root/lib/xstream-${xstream.version}.jar
xstream.loc=http://dist.codehaus.org/xstream/jars/xstream-${xstream.version}.jar

# ----- Xml Pull Parser 3rd Edition (XPP3) -----
xpp3.version=1.1.3_8
xpp3.version-sub=_min
xpp3.home=${dependencies.path}/xpp3-${xpp.version}
#xpp3.jar=${xpp3.home}/xpp3${xpp3.version-sub}-${xpp3.version}.jar
xpp3.jar=root/lib/xpp3${xpp3.version-sub}-${xpp3.version}.jar
xpp3.loc=http://www.extreme.indiana.edu/dist/java-repository/xpp3/jars/xpp3${xpp3.version-sub}-${xpp3.version}.jar

# ----- JGroups -----
jgroups.version=2.2.9.2
jgroups.home=${dependencies.path}/JGroups-${jgroups.version}.bin
jgroups.jar=${jgroups.home}/jgroups-all.jar
jgroups.loc=${sourceforge.url}/sourceforge/javagroups/JGroups-${jgroups.version}.bin.zip

# ----- Log4j -----
log4j.version=1.2.13
log4j.home=${dependencies.path}/logging-log4j-${log4j.version}
log4j.license=${log4j.home}/LICENSE.txt
#log4j.jar=${log4j.home}/dist/lib/log4j-${log4j.version}.jar
log4j.jar=root/lib/log4j-${log4j.version}.jar
log4j.loc=http://archive.apache.org/dist/logging/log4j/${log4j.version}/logging-log4j-${log4j.version}.tar.gz

# ----- Jaxen -----
jaxen.version=1.1-beta-9
jaxen.home=${dependencies.path}/jaxen-${jaxen.version}
jaxen.jar=${jaxen.home}/jaxen-${jaxen.version}.jar
jaxen.loc=http://www.ibiblio.org/maven/jaxen/jars/jaxen-${jaxen.version}.jar

# ----- Ognl -----
ognl.version=2.6.9
ognl.home=${dependencies.path}/ognl-${ognl.version}
ognl.jar=${ognl.home}/ognl-${ognl.version}.jar
ognl.loc=http://ognl.org/${ognl.version}/ognl-${ognl.version}.jar

# ----- JavaMatch -----
javamatch.version=0.2
javamatch.home=${dependencies.path}/javamatch
#javamatch.jar=${javamatch.home}/javamatch.jar
javamatch.jar=root/lib/javamatch-${javamatch.version}.jar
javamatch.loc=${sourceforge.url}/sourceforge/javamatch/javamatch-${javamatch.version}.zip

# ----- Commons JXPath -----
commons-jxpath.version=1.2
commons-jxpath.home=${dependencies.path}/commons-jxpath-${commons-jxpath.version}
commons-jxpath.jar=${commons-jxpath.home}/commons-jxpath-${commons-jxpath.version}.jar
commons-jxpath.loc=http://archive.apache.org/dist/jakarta/commons/jxpath/binaries/commons-jxpath-${commons-jxpath.version}.tar.gz

# ----- Commons Logging -----
commons-logging.version=1.1
commons-logging.home=${dependencies.path}/commons-logging-${commons-logging.version}
commons-logging.license=${commons-logging.home}/LICENSE.txt
#commons-logging.jar=${commons-logging.home}/commons-logging.jar
commons-logging.jar=root/lib/commons-logging-${commons-logging.version}.jar
commons-logging.loc=http://archive.apache.org/dist/jakarta/commons/logging/binaries/commons-logging-${commons-logging.version}.tar.gz

# ----- XML API's -----
xerces-j.version=2.8.0
xerces-j.version-u=2_8_0
xml-apis.version=
xml-apis.home=${dependencies.path}/xerces-${xerces-j.version-u}
xml-apis.jar=${xml-apis.home}/xml-apis.jar
xml-apis.loc=http://archive.apache.org/dist/xml/xerces-j/binaries/Xerces-J-bin.${xerces-j.version}.tar.gz

# ----- Xalan -----
xalan-j.version-u=2_7_0
xalan-j.home=${dependencies.path}/xalan-j_${xalan-j.version-u}
xalan.jar=${xalan-j.home}/xalan.jar
xalan.loc=http://archive.apache.org/dist/xml/xalan-j/binaries/xalan-j_${xalan-j.version-u}-bin-2jars.tar.gz

# ----- Ant-Contrib -----
ant-contrib.version=0.5
ant-contrib.home=${dependencies.path}
ant-contrib.jar=${ant-contrib.home}/lib/ant-contrib-${ant-contrib.version}.jar
ant-contrib.loc=${sourceforge.url}/sourceforge/ant-contrib/ant-contrib-${ant-contrib.version}-bin.tar.gz

# ----- VizAnt -----
vizant.home=${dependencies.path}/vizant
vizant.jar=${vizant.home}/vizant.jar
vizant.loc=${sourceforge.url}/sourceforge/vizant/vizant.jar

app.Name=Prevayler
app.name=prevayler
app.company=Klaus Wuestefeld
app.trademark='${app.Name}' is a trademark of ${app.company}.
app.url=http://www.prevayler.org/
app.year.1st=2001
app.year=2006
app.version=2.3

# set these to your requirements to be passed to the javadoc command
# Note that javadoc.jdk.packaglistLoc is used *only* if javadoc.jdk.offline equals "true".
# When false, javadoc will use a url set inside build.xml (intelligently selected based on
# detected ant.java.version).  Note: using javadoc.jdk.offline=true and setting the packagelistLoc
# results in invalid URL's in both Ant 1.4.1 and 1.5, so just leave it false for now.
javadoc.jdk.offline=false
javadoc.jdk.packagelistLoc=${env.JAVA_HOME}/docs/api
javadoc.windowTitle=${app.Name}(TM) v${app.version} API Documentation
javadoc.docTitle=<h1>${app.Name}&#8482; The Free Software Prevalence Layer</h1>
javadoc.header=<div style="font-weight:bold;text-align:left;">${app.Name}&#8482; <div>The Free Software</div><div>Prevalence Layer</div></div>
javadoc.footer=<div><em><a href="${app.url}" target="_blank" style="color:#b03;">${app.Name} Online</a></em></div>
javadoc.bottom=<div style="font-size:0.85em;">${app.trademark}<div>Copyleft ${app.year.1st}-${app.year} ${app.company}.</div></div>

jar.name.core=${app.name}-${app.version}
jar.name.all=${jar.name.core}-all
dist.name=${app.name}-${app.version}

cvs.build=$Revision: 1.52 $
